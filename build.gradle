plugins {
	//id 'org.springframework.context' version '2.2.1.RELEASE'
	//id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'application'
	id 'java'
}

group = 'io.turntabl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
mainClassName = 'io.turntabl.springgettingstarted.SpringGettingStartedApplication'

repositories {
	mavenCentral()
	jcenter()
}


dependencies {
	compile 'org.springframework:spring-core:5.2.1.RELEASE'
	compile 'org.springframework:spring-beans:5.2.1.RELEASE'
	compile 'org.springframework:spring-context:5.2.1.RELEASE'
	runtime 'org.springframework:spring-context:5.2.1.RELEASE'
	testCompile 'junit:junit:4.12'
	compile 'junit:junit:4.12'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-test', version: '1.5.0.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-test', version: '1.5.0.RELEASE'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.0.1.RELEASE'
	//testImplementation('org.springframework.boot:spring-boot-starter-test') {
	//	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	//}
}

test {
	useJUnitPlatform()
}

//this will build a start script in
tasks.startScripts {
	doLast {
		def scriptFile = file "${outputDir}/${applicationName}"
		scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/libs')
	}
}

jar {
	manifest {
		attributes(
				'Implementation-Title': 'Spring Getting Started',
				'Implementation-Version': version,
				'Main-Class': 'io.turntabl.springgettingstarted.SpringGettingStartedApplication'
		)
	}
}


